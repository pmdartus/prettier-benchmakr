import { source } from "common-tags";

export function toJson(report) {
  return JSON.stringify(report, null, 2);
}

export function toMarkdown(report) {
  return source`
    # Prettier Benchmark Report!!

    > This benchmark is generated by [prettier-benchmark](https://github.com/pmdartus/prettier-benchmark).

    ## Configuration

    ${configToMarkdown(report.config)}

    ## Results

    ${benchmarksToMarkdown(report.benchmarks)}
  `;
}

function configToMarkdown(config) {
  return source`
    - **Runs**: ${config.runs}
    - **Warmup**: ${config.warmup}
    - **Binaries**:
      ${config.binaries.map(
        (binary) => `- \`${binary.name}\` (version: \`${binary.version}\`)`
      )}
  `;
}

function benchmarksToMarkdown(benchmarks) {
  return benchmarks.map((benchmark) => {
    const { results } = benchmark;

    return source`
      ### Benchmark: \`${benchmark.name}\`

      | Binary | Mean [s] | Min [s] | Max [s] | Relative |
      |:---|---:|---:|---:|---:|
      ${
        results.map((result) => {
          const mean = `${result.mean.toFixed(2)} Â± ${result.stddev.toFixed(2)}`;
          const min = result.min.toFixed(2);
          const max = result.max.toFixed(2);

          const relative = (result.mean / results[0].mean).toFixed(2);

          return source`| \`${result.command}\` | ${mean} | ${min} | ${max} | ${relative} |`;
        })
      }
      
      <details>
        <summary>Raw data</summary>

        \`\`\`json
        ${JSON.stringify(benchmark, null, 4)}
        \`\`\`
      </details>
    `;
  }).join("\n\n");
}
